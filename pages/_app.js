import { useEffect, useState } from "react";
import Head from "next/head";
import {
  EthereumClient,
  w3mConnectors,
  w3mProvider,
} from "@web3modal/ethereum";
import { Web3Modal, useWeb3Modal } from "@web3modal/react";
import { configureChains, createConfig, useAccount, WagmiConfig } from "wagmi";
import { polygonMumbai } from "wagmi/chains";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { Footer, Header, RouteGuard } from "../components";
import "../styles/globals.css";

const chains = [polygonMumbai];
const projectId = process.env.walletConnectProjectId;

const { publicClient } = configureChains(chains, [w3mProvider({ projectId })]);
const wagmiConfig = createConfig({
  autoConnect: true,
  connectors: w3mConnectors({ projectId, version: 1, chains }),
  publicClient,
});
const ethereumClient = new EthereumClient(wagmiConfig, chains);

function MyApp({ Component, pageProps }) {
  const { open: openWeb3Modal } = useWeb3Modal();
  const { isConnected, status, address: connectUser } = useAccount();
  const [isAuthWallet, setIsAuthWallet] = useState(isConnected);

  const handleConnectWeb3Wallet = () => {
    isConnected || status === "connected"
      ? setIsAuthWallet(true)
      : setIsAuthWallet(false);
  };

  useEffect(() => {
    handleConnectWeb3Wallet();
  }, [isConnected, status]);

  useEffect(() => {
    handleConnectWeb3Wallet();
  }, []);

  useEffect(() => {
    import("@lottiefiles/lottie-player");
  });

  return (
    <>
      <Head>
        <title>Emerald Trust</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ToastContainer />

      <WagmiConfig config={wagmiConfig}>
        <div className="bg-slate-800 min-h-screen flex flex-col justify-between">
          <Header isConnect={isAuthWallet} />

          {/* min-h-[calc(100vh-80px)] */}
          <div className="relative flex justify-center max-w-full p-6 lg:px-8 h-fit overflow-x-hidden">
            <RouteGuard isConnect={isAuthWallet}>
              <Component
                {...pageProps}
                openWeb3Modal={openWeb3Modal}
                isConnect={isAuthWallet}
                connectUser={connectUser}
              />
            </RouteGuard>
          </div>

          <Footer />
        </div>
      </WagmiConfig>

      <Web3Modal
        themeVariables={{
          "--w3m-background-color": "#10b981",
          "--w3m-accent-color": "#10b981",
        }}
        projectId={projectId}
        ethereumClient={ethereumClient}
      />
    </>
  );
}

export default MyApp;
